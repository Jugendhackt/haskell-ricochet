{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Protocol.Data.AuthHiddenService (client_cookie, server_cookie, protoInfo, fileDescriptorProto) where
import Prelude ((+), (/), (==), (<=), (&&))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
import qualified Protocol.Data.Control.ChannelResult as Protocol.Data.Control (ChannelResult)
import qualified Protocol.Data.Control.OpenChannel as Protocol.Data.Control (OpenChannel)
 
client_cookie :: P'.Key P'.Maybe Protocol.Data.Control.OpenChannel P'.ByteString
client_cookie = P'.Key 7200 12 Prelude'.Nothing
 
server_cookie :: P'.Key P'.Maybe Protocol.Data.Control.ChannelResult P'.ByteString
server_cookie = P'.Key 7200 12 Prelude'.Nothing
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\"], baseName = MName \"AuthHiddenService\"}, protoFilePath = [\"Protocol\",\"Data\",\"AuthHiddenService.hs\"], protoSource = \"AuthHiddenService.proto\", extensionKeys = fromList [(ProtoName {protobufName = FIName \".Protocol.Data.Control.OpenChannel\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"Control\"], baseName = MName \"OpenChannel\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.client_cookie\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName' = FName \"client_cookie\"}, fieldNumber = FieldId {getFieldId = 7200}, wireTag = WireTag {getWireTag = 57602}, packedTag = Nothing, wireTagLength = 3, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".Protocol.Data.Control.ChannelResult\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"Control\"], baseName = MName \"ChannelResult\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.server_cookie\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName' = FName \"server_cookie\"}, fieldNumber = FieldId {getFieldId = 7200}, wireTag = WireTag {getWireTag = 57602}, packedTag = Nothing, wireTagLength = 3, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing})], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService.Packet\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName = MName \"Packet\"}, descFilePath = [\"Protocol\",\"Data\",\"AuthHiddenService\",\"Packet.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Packet.proof\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Packet\"], baseName' = FName \"proof\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService.Proof\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName = MName \"Proof\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Packet.result\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Packet\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService.Result\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName = MName \"Result\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService.Proof\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName = MName \"Proof\"}, descFilePath = [\"Protocol\",\"Data\",\"AuthHiddenService\",\"Proof.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Proof.public_key\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Proof\"], baseName' = FName \"public_key\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Proof.signature\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Proof\"], baseName' = FName \"signature\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Protocol.Data.AuthHiddenService.Result\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName = MName \"Result\"}, descFilePath = [\"Protocol\",\"Data\",\"AuthHiddenService\",\"Result.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Result.accepted\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Result\"], baseName' = FName \"accepted\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.Result.is_known_contact\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\",MName \"Result\"], baseName' = FName \"is_known_contact\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [], knownKeyMap = fromList [(ProtoName {protobufName = FIName \".Protocol.Data.Control.ChannelResult\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"Control\"], baseName = MName \"ChannelResult\"},fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.server_cookie\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName' = FName \"server_cookie\"}, fieldNumber = FieldId {getFieldId = 7200}, wireTag = WireTag {getWireTag = 57602}, packedTag = Nothing, wireTagLength = 3, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}]),(ProtoName {protobufName = FIName \".Protocol.Data.Control.OpenChannel\", haskellPrefix = [], parentModule = [MName \"Protocol\",MName \"Data\",MName \"Control\"], baseName = MName \"OpenChannel\"},fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Protocol.Data.AuthHiddenService.client_cookie\", haskellPrefix' = [], parentModule' = [MName \"Protocol\",MName \"Data\",MName \"AuthHiddenService\"], baseName' = FName \"client_cookie\"}, fieldNumber = FieldId {getFieldId = 7200}, wireTag = WireTag {getWireTag = 57602}, packedTag = Nothing, wireTagLength = 3, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}])]}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\170\ETX\n\ETBAuthHiddenService.proto\DC2\USProtocol.Data.AuthHiddenService\SUB\DC4ControlChannel.proto\"x\n\ACKPacket\DC25\n\ENQproof\CAN\SOH \SOH(\v2&.Protocol.Data.AuthHiddenService.Proof\DC27\n\ACKresult\CAN\STX \SOH(\v2'.Protocol.Data.AuthHiddenService.Result\".\n\ENQProof\DC2\DC2\n\npublic_key\CAN\SOH \SOH(\f\DC2\DC1\n\tsignature\CAN\STX \SOH(\f\"4\n\ACKResult\DC2\DLE\n\baccepted\CAN\SOH \STX(\b\DC2\CAN\n\DLEis_known_contact\CAN\STX \SOH(\b::\n\rclient_cookie\DC2\".Protocol.Data.Control.OpenChannel\CAN\160\&8 \SOH(\f:<\n\rserver_cookie\DC2$.Protocol.Data.Control.ChannelResult\CAN\160\&8 \SOH(\f")