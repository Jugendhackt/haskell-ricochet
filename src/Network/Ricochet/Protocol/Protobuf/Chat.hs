{-|
  Module:      Network.Ricochet.Protocol.Protobuf.Chat
  Description: Lenses for ChatChannel.proto messages

"Network.Ricochet.Protocol.Protobuf.Chat" mostly re-exports lenses that are
generated by hprotoc.  One Maybe layer is removed from the record members of
'CP.Packet', and the name conflict between 'CM.message_id' and 'CA.message_id'
is resolved by introducing 'HasMessageId'.
-}

module Network.Ricochet.Protocol.Protobuf.Chat
  ( message_id
  , CP.Packet (CP.Packet)
  , chat_message
  , chat_acknowledge
  , CM.ChatMessage (CM.ChatMessage)
  , CM.message_text
  , CM.time_delta
  , CA.ChatAcknowledge (CA.ChatAcknowledge)
  , CA.accepted
  ) where

import qualified Network.Ricochet.Protocol.Data.Chat.Packet as CP
import qualified Network.Ricochet.Protocol.Data.Chat.ChatMessage as CM
import qualified Network.Ricochet.Protocol.Data.Chat.ChatAcknowledge as CA

import           Control.Lens
import           Data.Word                  (Word32)

chat_message :: Traversal' CP.Packet CM.ChatMessage
chat_message = CP.chat_message . _Just

chat_acknowledge :: Traversal' CP.Packet CA.ChatAcknowledge
chat_acknowledge = CP.chat_acknowledge . _Just

class HasMessageId m where
  message_id :: Lens' m (Maybe Word32)

instance HasMessageId CM.ChatMessage where
  message_id = CM.message_id

instance HasMessageId CA.ChatAcknowledge where
  message_id = CA.message_id
